version: "3"
services:
    letsencypt:
        image: docker.hernrup.se/letsencypt
        build: docker/letsencrypt
        restart: unless-stopped
        command: certonly --webroot --webroot-path /var/www --agree-tos --cert-name hernrup.se --email $LETSENCRYPT_EMAIL --renew-by-default $LETSENCRYPT_DOMAINS
        volumes:
            - letsencrypt:/etc/letsencrypt
            - letsencrypt_webroot:/var/www
        depends_on:
            - nginx

    nginx:
        image: docker.hernrup.se/nginx
        build: docker/nginx
        restart: unless-stopped
        volumes:
            - letsencrypt:/etc/letsencrypt
            - letsencrypt_webroot:/var/letsencrypt
            # - ./docker/nginx/files/etc/nginx/:/etc/nginx/
            - .data/nginx/.htpasswd:/etc/.htpasswd
        ports:
            - "80:80"
            - "443:443"
        # links:
            # - vpn:nzb

    plex:
        image: linuxserver/plex
        restart: unless-stopped
        volumes:
            - .data/plex:/config
            - ${TV_DIR}:/data/tvshows
            - ${MOVIE_DIR}:/data/movies
        # network_mode: host
        ports:
            - "32400:32400"
            - "32400:32400/udp"
            - "32469:32469"
            - "32469:32469/udp"
            - "1900:1900/udp"

    sonarr:
        image: linuxserver/sonarr
        restart: unless-stopped
        volumes:
            - ".data/sonarr/etc:/config"
            - "${TV_DIR}:/tv"
            - downloads:/downloads
        # depends_on:
            # - vpn
        # links:
            # - vpn:nzb

    nzb:
        image: linuxserver/sabnzbd
        restart: unless-stopped
        volumes:
            - downloads:/downloads
            - nzb_temp:/incomplete-downloads
            - .data/nzb/etc:/config
        # depends_on:
            # - vpn
        # network_mode:
            # "service:vpn"

    potatoe:
        image: linuxserver/couchpotato
        restart: unless-stopped
        volumes:
            - ".data/couchpotatoe/etc:/config"
            - downloads:/downloads
            - "${MOVIE_DIR}:/movies"
    #
    # registry:
    #     restart: unless-stopped
    #     image: registry:2
    #     environment:
    #         REGISTRY_AUTH: htpasswd
    #         REGISTRY_AUTH_HTPASSWD_PATH: /auth/.htpasswd
    #         REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    #     volumes:
    #         - ".data/docker-registry:/var/lib/registry"
    #         - .data/letsencrypt/etc/live/hernrup.se:/certs
    #         - .data/registry/auth:/auth
    #
    # vpn:
    #     image: dperson/openvpn-client
    #     cap_add:
    #         - NET_ADMIN
    #     volumes:
    #         - .data/vpn:/vpn

    # backup:
    #     image: docker.hernrup.se/hernrup/backup:develop
    #     restart: always
    #     build:
    #         context: ./docker/backupninja
    #     volumes:
    #         - .data/backupninja/.ssh:/root/.ssh
    #         - ./docker/backupninja/backupninja.conf:/etc/backupninja.conf
    #         - ./docker/backupninja/ssmtp.conf:/etc/ssmtp/ssmtp.conf
    #         - ./docker/backupninja/backup.d:/etc/backupninja
    #         - /mnt/media_1:/mnt/media_1
    #     # depends_on:
    #         # - smtp
    # #
    # smtp:
    #     image: namshi/smtp
    #     ports:
    #         - "25:25"
    #     environment:
    #         GMAIL_USER: ${GMAIL_USER}
    #         GMAIL_PASSWORD: ${GMAIL_PASSWORD}
    #         MAILNAME: hernrup.se
    #         # RELAY_NETWORKS: :0.0.0.0/0
    #         # SMARTHOST_ADDRESS: ${SMTP_HOST}
    #         # SMARTHOST_USER: ${SMTP_USER}
    #         # SMARTHOST_PASSWORD: ${SMTP_PASSWORD}
    #         # SMARTHOST_PORT: ${SMTP_PORT}
    #         # SMARTHOST_ALIASES: "*.binero.se"
    #     restart: always
    #
    hass:
      image: homeassistant/home-assistant
      restart: always
      volumes:
        - config/homeassistant:/config
        - .data/homeassistant:/data
        - /etc/localtime:/etc/localtime:ro
      devices:
          - /dev/serial/by-id/usb-RFXCOM_RFXtrx433_A128MSXO-if00-port0:/dev/serial/by-id/usb-RFXCOM_RFXtrx433_A128MSXO-if00-port0
      ports:
          - "8123:8123"

    influxdb:
        image: influxdb
        restart: unless-stopped
        ports:
            - "8086:8086"
        volumes:
            - .data/influxdb:/var/lib/influxdb
            - config/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf

    chronograf:
        image: docker.hernrup.se/chronograf
        restart: always
        build: ./docker/chronograf
        ports:
            - "8888:8888"
        volumes:
            - .data/chronograf:/var/lib/chronograf

    deconz:
        image: joch/deconz
        ports:
            - "8080:8080"
        volumes:
            - .data/deconz:/root/.local/share/dresden-elektronik/deCONZ
        devices:
            - /dev/ttyUSB0
        restart: unless-stopped
        privileged: true

    portainer:
        image: portainer/portainer
        volumes:
            - .data/portainer:/data
            - /var/run/docker.sock:/var/run/docker.sock
        ports:
            - "9000:9000"

    mqtt:
        container_name: MQTT
        restart: unless-stopped
        image: eclipse-mosquitto
        volumes:
            - config/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
            - .data/mosquitto:/mosquitto/data
            - /etc/localtime:/etc/localtime:ro
        ports:
            - "1883:1883"
            - "9001:9001"

    grafana:
        container_name: grafana
        restart: unless-stopped
        image: grafana/grafana
        depends_on:
            - "influxdb"
        volumes:
            - .data/grafana:/var/lib/grafana
        ports:
            - "3000:3000"

volumes:
    letsencrypt:
        driver: local
    letsencrypt_webroot:
        driver: local
    downloads:
        driver: local
    nzb_temp:
        driver: local
