version: "3"
services:

    # registry:
    #     restart: unless-stopped
    #     image: registry:2
    #     environment:
    #         REGISTRY_AUTH: htpasswd
    #         REGISTRY_AUTH_HTPASSWD_PATH: /auth/.htpasswd
    #         REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    #     volumes:
    #         - ".data/docker-registry:/var/lib/registry"
    #         - .data/letsencrypt/etc/live/hernrup.se:/certs
    #         - .data/registry/auth:/auth
    #
    # vpn:
    #     image: dperson/openvpn-client
    #     cap_add:
    #         - NET_ADMIN
    #     volumes:
    #         - .data/vpn:/vpn

    traefik:
        image: traefik
        command: --api --docker --docker.domain=hernrup.se
        ports:
            - "80:80"
            - "443:443"
            - "8009:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./services/traefik/traefik.toml:/traefik.toml
            - letsencrypt:/etc/acme
        labels:
            - "traefik.frontend.rule=Host:traefik.hernrup.se"
            - "traefik.enable=true"
            - "traefik.port=8080"
            - "traefik.frontend.auth.basic=admin:$$apr1$$gagmyckp$$QOlwxjImT3OO8DWi2Z.P5."

    whoami:
        image: emilevauge/whoami
        labels:
            - "traefik.frontend.rule=Host:home.hernrup.se"
            - "traefik.enable=true"
            - "traefik.frontend.auth.basic=admin:$$apr1$$gagmyckp$$QOlwxjImT3OO8DWi2Z.P5."

    db:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: pass

    backup:
        image: docker.hernrup.se/hernrup/backup:latest
        hostname: backup
        restart: unless-stopped
        build:
            context: ./services/backup
        env_file:
            - services/backup/.env
        volumes:
            - /var/data/backup/.ssh:/root/.ssh
            - /mnt/media_1:/mnt/media_1:ro
            - /var/data:/var/data:ro
            - ./services/backup/backup.d:/etc/backup.d
            - backup_tmp:/tmp
            - backup_cache:/cache

networks:
    default:
        driver: bridge

volumes:
    letsencrypt:
        driver: local
    consul:
        driver: local
    backup_tmp:
        driver: local
    backup_cache:
        driver: local
